name: Go Build

on:
  push:
    tags: [v*]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21]
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        include:
          - os: ubuntu-latest
            arch: amd64
            GOOS: linux
          - os: ubuntu-latest
            arch: arm64
            GOOS: linux
          - os: macos-latest
            arch: amd64
            GOOS: darwin
          - os: macos-latest
            arch: arm64
            GOOS: darwin
          - os: windows-latest
            arch: amd64
            GOOS: windows
          - os: windows-latest
            arch: arm64
            GOOS: windows
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get the version tag
        run: echo "TAG_NAME=$(echo ${{ github.ref }} | sed 's#refs/tags/##')" >> $GITHUB_ENV

      - name: Get dependencies
        run: go mod tidy

      - name: Build
        run: GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.arch }} go build -ldflags "-s -w" -v -o mempass-$TAG_NAME-${{ matrix.GOOS }}-${{ matrix.arch }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mempass-$TAG_NAME-${{ matrix.GOOS }}-${{ matrix.arch }}
          path: mempass-$TAG_NAME-${{ matrix.GOOS }}-${{ matrix.arch }}
